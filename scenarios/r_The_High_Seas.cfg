#textdomain wesnoth-Saving_Elensefar

[scenario]
    id=sea_voyage_0
    name= _ "The High Seas"
    map_data="{~add-ons/Saving_Elensefar/maps/05-The_High_Seas.map}"
    turns=30
    victory_when_enemies_defeated=no
    force_lock_settings=yes
    allow_new_game=no
    random_start_time=no

#ifdef MULTIPLAYER
    experience_modifier={ON_DIFFICULTY 90 120 140}
#endif

    [lua]
        code = << wesnoth.dofile("~add-ons/Saving_Elensefar/utils/wml-tags.lua") >>
    [/lua]

    {SAVING_ELENSEFAR_SHEDULE}
    {MOOD_CALM}

    [side]
        side=1
        {HUMAN_SIDE}
        {MENELDUR}

        defeat_condition=never
        shroud=yes
        fog=yes
        village_gold=0
        income=-2
    [/side]

    [side]
        side=2
#ifdef MULTIPLAYER
        {HUMAN_SIDE}
        {MADRU}

        defeat_condition=never
        shroud=yes
        fog=yes
        village_gold=0
        income=-2
#else
        controller=null
        hidden=yes
#endif
    [/side]

    [side]
        side=3
#ifdef MULTIPLAYER
        {HUMAN_SIDE}
        {BLACK_THE_RED}

        defeat_condition=never
        shroud=yes
        fog=yes
        village_gold=0
        income=-2
#else
        controller=null
        hidden=yes
#endif
    [/side]

    [side]
        side=4
        no_leader=yes
        controller=ai
        {LOCK_SIDE}
        [ai]
            version=10703
            [stage]
                engine=fai
                name=unit_formulas
            [/stage]
        [/ai]
    [/side]

#define GUARD_SHIP tYPE x1 y1 x2 y2
    [unit]
        type={tYPE}
        side=4
        ai_special=guardian
        x,y={x1},{y1}
        [ai]
            loop_formula="{ai/formula/patrol.fai}"
            [vars]
                guard_radius=4
                waypoints=[ loc({x1},{y1}) -> loc({x2},{y2}), loc({x2},{y2}) -> loc({x1},{y1}) ]
                next_step="loc({x2},{y2})"
            [/vars]
        [/ai]
    [/unit]
#enddef

#define STORE_SCENARIO ID
    [modify_unit]
        [filter]
            id=Explorer
        [/filter]
        side=1
    [/modify_unit]

    # remember the turn number
    {VARIABLE total_turns $turn_number}

    # get shroud data for Meneldur
    [store_shroud]
        side=1
        variable=shroud
    [/store_shroud]

    # store ships
    [store_unit]
        [filter]
            {EVERYWHERE}
        [/filter]
        variable=ships
        kill=yes
    [/store_unit]

    {SE_ENDLEVEL_CONTINUE_NO_SAVE}
    [+endlevel]
        next_scenario=sea_voyage_{ID}
    [/endlevel]
#enddef

#define DEFINE_ISLAND ID X Y SPEAKER MESSAGE
    [set_variables]
        name=islands
        mode=append
        [value]
            id={ID}
            x,y={X},{Y}
            status=playable
            speaker={SPEAKER}
            message={MESSAGE}
        [/value]
    [/set_variables]
#enddef

    [event]
        name=prestart

#ifndef MULTIPLAYER
        [recall]
            id=Madru
            x,y=1,1
        [/recall]
        [recall]
            id="Black the Red"
            x,y=2,2
        [/recall]
#endif

        [set_extra_recruit]
            id=Meneldur
            extra_recruit=""
        [/set_extra_recruit]
        [set_extra_recruit]
            id=Madru
            extra_recruit=""
        [/set_extra_recruit]
        [set_extra_recruit]
            id="Black the Red"
            extra_recruit=""
        [/set_extra_recruit]

        {PUT_TO_RECALL_LIST (id="Madru")}
        {PUT_TO_RECALL_LIST (id="Black the Red")}
        {PUT_TO_RECALL_LIST (id="Meneldur")}

        [if]
            {VARIABLE_CONDITIONAL started equals yes}
            [then]
                [fire_event]
                    name=prepare scenario
                [/fire_event]
            [/then]
            [else]
                [fire_event]
                    name=initialize scenario
                [/fire_event]
            [/else]
        [/if]

        [item]
            x,y=57,3
            image="scenery/shipwreck-1.png"
        [/item]
        [item]
            x,y=41,12
            image="scenery/mine-abandoned.png"
        [/item]
        [item]
            x,y=39,18
            image="units/human-loyalists/spearman.png~RC(magenta>blue)"
        [/item]
        [item]
            x,y=17,11
            image="units/elves-wood/fighter.png~RC(magenta>green)"
        [/item]

        [label]
            x,y=60,2
            text= _ "Elensefar"
        [/label]

        [label]
            x,y=3,13
            text= _ "Blackmore the Black"
        [/label]

        [label]
            x,y=24,7
            text= _ "Barbaric Sea"
        [/label]

        [label]
            x,y=46,16
            text= _ "South Sea"
        [/label]

        [label]
            x,y=57,13
            text= _ "Alduin"
        [/label]

        [redraw]
            side=1,2,3
            clear_shroud=yes
        [/redraw]
    [/event]

    [event]
        name=prepare scenario

        {FOREACH ships i}
            {VARIABLE ships.moves $ships.max_moves}
            [unstore_unit]
                variable=ships[$i]
            [/unstore_unit]
        {NEXT i}

        {FOREACH sunkenships i}
            [item]
                x,y=$sunkenships[$i].x,$sunkenships[$i].y
                image="scenery/wreck.png"
            [/item]
        {NEXT i}

        {FOREACH islands i}
            [if]
                {VARIABLE_CONDITIONAL islands[$i].status equals played}
                [then]
                    [capture_village]
                        side=1
                        x,y=$islands[$i].x,$islands[$i].y
                    [/capture_village]
                [/then]
            [/if]
            [if]
                {VARIABLE_CONDITIONAL islands[$i].status equals locked}
                [then]
                    [terrain]
                        x,y=$islands[$i].x,$islands[$i].y
                        terrain=Mv
                    [/terrain]
                [/then]
            [/if]
        {NEXT i}

        [if]
            {VARIABLE_CONDITIONAL retreatedNotWon not_equals yes}
            [then]
                {VARIABLE turnsleft 6}
            [/then]
        [/if]

        [set_shroud]
            side=1
            shroud_data=$shroud
        [/set_shroud]
        [set_shroud]
            side=2
            shroud_data=$shroud
        [/set_shroud]
        [set_shroud]
            side=3
            shroud_data=$shroud
        [/set_shroud]

        [modify_turns]
            value=30
            current=$total_turns
        [/modify_turns]

        {CLEAR_VARIABLE retreatedNotWon,ships,shroud}
    [/event]

    [event]
        name=initialize scenario

        {VARIABLE shipgold 100}
        {VARIABLE turnsleft 6}

        [unit]
            side=1
            x,y=59,2
            id=Explorer
            name= _"The Explorer"
            type=SE Black Galleon
            #canrecruit=yes
            {IS_EXPENDABLE_LEADER}
        [/unit]

        # Wesnoth army
        {GUARD_SHIP ("War Galleon") 61 12 55 3}
        {GUARD_SHIP ("War Galleon") 38 16 50 15}
        {GUARD_SHIP ("Pirate Galleon") 40 6 32 14}
        {GUARD_SHIP ("War Galleon") 20 4 23 15}
        {GUARD_SHIP ("Transport Galleon") 16 18 28 18}

#ifndef EASY
        {GUARD_SHIP ("Transport Galleon") 48 18 56 10}
        {GUARD_SHIP ("War Galleon") 45 11 50 1}
#endif

#ifdef HARD
        {GUARD_SHIP ("Pirate Galleon") 32 3 44 3}
        {GUARD_SHIP ("War Galleon") 23 15 20 4}
#endif

        [modify_unit]
            [filter]
                side=4
            [/filter]
            moves=4
            max_moves=4
            max_experience=500
        [/modify_unit]

        [modify_unit]
            [filter]
                type="Pirate Galleon"
            [/filter]
            level=4
            alignment=chaotic
        [/modify_unit]

        {DEFINE_ISLAND swampland 50 4 Madru ( _ "There does not seem to be anyone living on this island... except, it seems, that black-cowled man on the far side...")}
        {DEFINE_ISLAND orc_mountain 42 13 Meneldur ( _ "Last time I was here there was a trading colony, but it seems to be gone. Their old stockades should still be here, anyway.")}
        {DEFINE_ISLAND loyalists 40 18 Madru ( _ "I see signs of a Wesnothian outpost. Odd they would come so far south...")}
        {DEFINE_ISLAND theft 37 7 ("Black the Red") ( _ "I think something is in the water...")}
        {DEFINE_ISLAND traitors 18 11 Meneldur ( _ "This island looks vaguely elvish.")}
        {DEFINE_ISLAND desert_island 17 8 Madru ( _ "Nagas were about a hundred years ago, in Haldric's time! I wonder if any remain...")}
        {DEFINE_ISLAND frozen_lands 5 5 Meneldur ( _ "Does anything live in this frozen wasteland?")}
        {DEFINE_ISLAND ruined_port 5 17 ("Black the Red") ( _ "This is old Clearwater Port! It was sacked by orcs long ago, I doubt there are any humans left.")}
        {DEFINE_ISLAND alduin 57 13 Meneldur ( _ "The Great Academy of Alduin is settled on this isle! Let us hold here for a day or two.")}
        {DEFINE_ISLAND cave 51 18 ("Black the Red") ( _ "This is just an abandoned smugglers hole.")}
        {DEFINE_ISLAND saurians 68 17 Madru ( _ "Carefull with those riffs, or we will shipwreck")}
        {DEFINE_ISLAND fire_island 28 14 Meneldur ( _ "Legend says Haldric landed here on his journey over, and that he fought something. Lets hope we don't have to fight whatever it was...")}
        {DEFINE_ISLAND goblins 22 20 Madru ( _ "This island has nothing of interest.")}
        {DEFINE_ISLAND illusionist 24 1 Meneldur ( _ "There is a great tower on the isle. Which kind of mage live here?")}
        {DEFINE_ISLAND -3 4 12 ("Black the Red") ( _ "This is the land I was talking about. Land here, and we will get the warriors we need.")}
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            side=1,2,3
            [filter_location]
                find_in=islands
            [/filter_location]
        [/filter]

        {VARIABLE move_x 0}
        [while]
            {VARIABLE_CONDITIONAL move_x less_than $islands.length}
            {VARIABLE_CONDITIONAL islands[$move_x].x not_equals $unit.x}
            [do]
                {VARIABLE_OP move_x add 1}
            [/do]
        [/while]

        {VARIABLE move_y 0}
        [while]
            {VARIABLE_CONDITIONAL move_y less_than $islands.length}
            [do]
                [if]
                    {VARIABLE_CONDITIONAL islands[$move_y].y equals $unit.y}
                    [then]
                        [if]
                            {VARIABLE_CONDITIONAL islands[$move_y].x equals $islands[$move_x].x}
                            [then]
                                {VARIABLE island_i $move_y}
                                {VARIABLE move_y 999}
                            [/then]
                            [else]
                                {VARIABLE_OP move_y add 1}
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        {VARIABLE_OP move_y add 1}
                    [/else]
                [/if]
            [/do]
        [/while]

        [store_unit]
            [filter]
                id=$islands[$island_i].speaker
            [/filter]
            variable=speaker
        [/store_unit]

        [switch]
            variable=islands[$island_i].status
            [case]
                value=playable

                [message]
                    speaker=Explorer
                    caption=$speaker.name
                    image=$speaker.profile
                    message=$islands[$island_i].message
                [/message]

                {VARIABLE islands[$island_i].status played}

                {STORE_SCENARIO $islands[$island_i].id}
            [/case]
            [case]
                value=played

                [message]
                    speaker=Explorer
                    caption=$speaker.name
                    image=$speaker.profile
                    message= _ "This island has no more enemies on it, but we can still reprovision here. That will still take time, though."
                [/message]

                {VARIABLE turnsleft 6}
                [end_turn][/end_turn]
            [/case]
            [case]
                value=retreated

                [message]
                    speaker=Explorer
                    caption=$speaker.name
                    image=$speaker.profile
                    message= _ "We have unfinished business to attend to."
                [/message]

                {VARIABLE islands[$island_i].status played}

                {STORE_SCENARIO $islands[$island_i].id}
            [/case]
        [/switch]
        {CLEAR_VARIABLE speaker,island_i,move_x,move_y}
    [/event]

    [event]
        name=side turn

        [objectives]
            side=0
            summary="<big>" _ "Scenario Rules:" + "</big>"
            [objective]
                description="<span color='white'><b>"+ _"Land in a harbor to reprovision."+"</b></span>"
                condition=win
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"The Wesnothian ships are chasing you; if they attack you they will attempt to board your ship."+"</b></span>"
                condition=win
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"Each of their ships has enough provisions to completely restock your ship."+"</b></span>"
                condition=win
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"Your long-term objective is to reach the lands in the West where Black the Red says there are allies, and have them join you."+"</b></span>"
                condition=win
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"Until then you cannot return to Elensefar."+"</b></span>"
                condition=win
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"Be at sea for 6 weeks (6 turns) without reprovisioning"+"
</b><small>"+ _"(currently $turnsleft provisions remaining)"+"</small></span>"
                condition=lose
            [/objective]
            [objective]
                description="<span color='white'><b>"+ _"Take more than 30 weeks to reach the western lands"+"</b></span>"
                show_turn_counter=yes
                condition=lose
            [/objective]
        [/objectives]

        [scroll_to_unit]
            id=Explorer
        [/scroll_to_unit]

        [if]
            {VARIABLE_CONDITIONAL started not_equals yes}
            [then]
                [message]
                    id=Explorer
                    caption=_ "Madru"
                    image="portraits/Madru.png"
                    message= _ "We have left Elensefar in the hands of the orcs. If we do not return soon, it will be of no use to return at all. We have at most 30 weeks to get to the western lands, where we will meet with the people Black the Red has spoken of. That will leave us with 5 weeks to get back."
                [/message]
                [delay]
                    time=500
                [/delay]
                [message]
                    id=The_Explorer
                    caption=_ "Madru"
                    image="portraits/Madru.png"
                    message= _ "Also, our ship cannot hold provisions for more than 6 weeks at a time, so we must either land on an island or capture an enemy ship ever 6 weeks."
                [/message]
                {VARIABLE started yes}
            [/then]
        [/if]
    [/event]

    [event]
        name=turn end
        first_time_only=no
        {VARIABLE_OP scenario_number add 1}
    [/event]

#ifdef MULTIPLAYER
    [event]
        name=side 1 turn end
        first_time_only=no

        [modify_unit]
            [filter]
                id=Explorer
            [/filter]
            side=2
            moves=$this_unit.moves
        [/modify_unit]
    [/event]

    [event]
        name=side 2 turn end
        first_time_only=no

        [modify_unit]
            [filter]
                id=Explorer
            [/filter]
            side=3
            moves=$this_unit.moves
        [/modify_unit]
    [/event]

    [event]
        name=side 3 turn end
        first_time_only=no

        [modify_unit]
            [filter]
                id=Explorer
            [/filter]
            side=1
            moves=$this_unit.moves
        [/modify_unit]
    [/event]
#endif

    # tell the player how many time remains
    [event]
        name=side 1 turn refresh,side 2 turn refresh,side 3 turn refresh
        first_time_only=no

        {VARIABLE gameleft "$(31-$turn_number)"}

        [switch]
            variable=turnsleft
            [case]
                value=0
                [message]
                    id=Explorer
                    caption=_ "Madru"
                    image="portraits/Madru.png"
                    message= _ "We have ran out of provisions.... *urgh*"
                [/message]
                [endlevel]
                    result=defeat
                    reveal_map=no
                [/endlevel]
            [/case]
            [case]
                value=1
                [message]
                    id=Explorer
                    caption=_ "Madru"
                    image="portraits/Madru.png"
                    message= _ "Hurry, we are down to our last provisions! If we don't refill them within a week, we will all starve!"
                [/message]
                {VARIABLE_OP turnsleft sub 1}
            [/case]
            [else]
                [message]
                    id=Explorer
                    caption=_ "Madru"
                    image="portraits/Madru.png"
                    message= _ "We only have enough provisions for $turnsleft weeks; we must reach the Western Lands in $gameleft weeks."
                [/message]
                {VARIABLE_OP turnsleft sub 1}
            [/else]
        [/switch]
    [/event]

    # Time over: defeat
    [event]
        name=time over

        [message]
            id=Explorer
            caption=_ "Black the Red"
            image="portraits/Black_the_Red.png"
            message= _ "We have failed reaching the Westlands in time."
        [/message]
        [endlevel]
            result=defeat
            reveal_map=no
        [/endlevel]
    [/event]

    # The sea battle
    [event]
        name=attack
        first_time_only=no

        [filter]
            type=SE Black Galleon
        [/filter]

        [fire_event]
            name=seabattle
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        first_time_only=no

        [filter_second]
            type=SE Black Galleon
        [/filter_second]

        [fire_event]
            name=seabattle
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]

    [event]
        name=seabattle
        first_time_only=no

        [set_variables]
            name=sunkenships
            mode=append
            [value]
                x,y=$x2,$y2
            [/value]
        [/set_variables]

        {VARIABLE turnsleft 6}

        [switch]
            variable=second_unit.type
            [case]
                value=Pirate Galleon
                {VARIABLE enemy_faction pirates}
            [/case]
            [case]
                value=Transport Galleon
                {VARIABLE enemy_faction orcs}
            [/case]
            [else]
                {VARIABLE enemy_faction loyalists}
            [/else]
        [/switch]

        # finding direction of attack
        [if]
            {VARIABLE_CONDITIONAL $x2 equals $x1}
            [then]
                [if]
                    {VARIABLE_CONDITIONAL $y2 greater_than $y1}
                    [then]
                        {VARIABLE direction S}
                    [/then]
                    [else]
                        {VARIABLE direction N}
                    [/else]
                [/if]
            [/then]
            [else]
                [if]
                    {VARIABLE_CONDITIONAL $x2 greater_than $x1}
                    [then]
                        [if]
                            {VARIABLE_CONDITIONAL $y2 greater_than $y1}
                            [then]
                                {VARIABLE direction SE}
                            [/then]
                            [else]
                                {VARIABLE direction NE}
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        [if]
                            {VARIABLE_CONDITIONAL $y2 greater_than $y1}
                            [then]
                                {VARIABLE direction SW}
                            [/then]
                            [else]
                                {VARIABLE direction NW}
                            [/else]
                        [/if]
                    [/else]
                [/if]
            [/else]
        [/if]

        [kill]
            x,y=$x2,$y2
            animate=no
        [/kill]

        {STORE_SCENARIO $direction}
        {CLEAR_VARIABLE direction}
    [/event]
[/scenario]
