#textdomain wesnoth-Saving_Elensefar

#define HUMAN_SIDE
    recruit=""
    controller=human
    persistent=yes
    team_name=good
    user_team_name= _"Elensefar's Loyals"
    gold=0
    income=-2
#ifdef MULTIPLAYER
    faction=Custom
    controller_lock=yes
    faction_lock=yes
    team_lock=yes
    gold_lock=yes
    income_lock=yes
#endif
    fog=no
    shroud=no
    share_maps=yes
    share_view=yes
    {FLAG_VARIANT long}
#enddef

#define MENELDUR
    save_id=Meneldur
    type=Elvish Mariner
    profile="portraits/Meneldur.png"
    id=Meneldur
    name= _ "Meneldur"
    unrenamable=yes
    canrecruit=yes
    [modifications]
        {TRAIT_LOYAL}
        {TRAIT_STRONG}
    [/modifications]

    extra_recruit="Elvish Archer,Elvish Scout,Elvish Civilian"
    [filter_recall]
        race=elf
        [or]
            type={MENELDUR_EXTRA_RECALL}
        [/or]
    [/filter_recall]
#enddef

#define MADRU
    save_id=Madru
    type=Sailor
    id=Madru
    name= _ "Madru"
    profile="portraits/Madru.png"
    unrenamable=yes
    canrecruit=yes
    [modifications]
        {TRAIT_LOYAL}
        {TRAIT_RESILIENT}
    [/modifications]

    extra_recruit="Fencer,Spearman,SE Civilian"
    [filter_recall]
        type={FILTER_LOYALISTS},{MADRU_EXTRA_RECALL}
    [/filter_recall]
#enddef

#define BLACK_THE_RED
    save_id=Black_the_Red
    id="Black the Red"
    name= _ "Black the Red"
    type=SE Shadow Mage
    profile="portraits/Black_the_Red.png"
    unrenamable=yes
    canrecruit=yes
    [modifications]
        {TRAIT_LOYAL}
        {TRAIT_INTELLIGENT}
    [/modifications]

    extra_recruit="Thief,Thug,SE Civilian,Ruffian"
    [filter_recall]
        type={FILTER_OUTLAWS},{BLACK_EXTRA_RECALL},{FILTER_WOOD_WARRIORS}
    [/filter_recall]
#enddef

#define AH-REBLAK
    id=Ah-Reblak
    name= _"Ah-Reblak"
    type=Lich
    canrecruit=yes
    unrenamable=yes
    [modifications]
        {TRAIT_LOYAL}
    [/modifications]
#ifdef EASY
    extra_recruit=Skeleton,Skeleton Archer,Walking Corpse,Ghoul,Soulless,Ghost
    [filter_recall]
        type={FILTER_UNDEAD},{FILTER_GHOSTS}
    [/filter_recall]
#else
    extra_recruit=Skeleton,Skeleton Archer,Walking Corpse,Ghoul
    [filter_recall]
        type={FILTER_UNDEAD}
    [/filter_recall]
#endif
    {IS_EXPENDABLE_LEADER}
#enddef

#define SCENARIO_EVENTS
    {DEATHS_SEA}
    {GIVE_EXP}
    {SUPPLY_SIDE_ECONOMICS}
    {DISABLE_UPKEEP 1}
#enddef

#define RECALL_MOST_EXPERIENCED ADDITIONAL_FILTER EASY NORMAL HARD
    [store_unit]
        [filter]
            id=Meneldur
        [/filter]
        variable=main_leader
    [/store_unit]

    [store_unit]
        [filter]
            canrecruit=yes
            x,y=recall,recall
            [not]
                id=$main_leader.id
            [/not]
        [/filter]
        variable=extra_leaders
    [/store_unit]

    {FOREACH extra_leaders i_temp}
        [recall]
            id=$extra_leaders[$i_temp].id
            x,y=$main_leader.x,$main_leader.y
            fire_event=yes
            show=yes
        [/recall]
    {NEXT i_temp}

    # recalls the most experienced units based on difficulty
    {VARIABLE i_side 1}
    [while]
#ifdef MULTIPLAYER
        {VARIABLE_CONDITIONAL i_side less_than 4}
#else
        {VARIABLE_CONDITIONAL i_side less_than 2}
#endif
        [do]
            [while]
                [and]
                    [variable]
                        name=recall.length
                        less_than={ON_DIFFICULTY {EASY} {NORMAL} {HARD}}
                    [/variable]
                [/and]
                [and]
                    [have_unit]
                        side=$i_side
                        x,y=recall,recall
                        [not]
                            find_in=recall
                        [/not]
                        {ADDITIONAL_FILTER}
                        search_recall_list=yes
                    [/have_unit]
                [/and]
                [do]
                    [store_unit]
                        [filter]
                            side=$i_side
                            x,y=recall,recall
                            {ADDITIONAL_FILTER}
                            [not]
                                find_in=recall
                            [/not]
                        [/filter]
                        variable=temp_unit
                    [/store_unit]

                    {VARIABLE best_index 0}

                    {FOREACH temp_unit j_temp}
                        [if]
                            {VARIABLE_CONDITIONAL temp_unit[$j_temp].level greater_than $temp_unit[$best_index].level}
                            [then]
                                {VARIABLE best_index $j_temp}
                            [/then]
                            [else]
                                [if]
                                    {VARIABLE_CONDITIONAL temp_unit[$j_temp].level equals $temp_unit[$best_index].level}
                                    [then]
                                        [if]
                                            {VARIABLE_CONDITIONAL temp_unit[$j_temp].experience greater_than $temp_unit[$best_index].experience}
                                            [then]
                                                {VARIABLE best_index $j_temp}
                                            [/then]
                                        [/if]
                                    [/then]
                                [/if]
                            [/else]
                        [/if]
                    {NEXT j_temp}

                    [store_unit]
                        [filter]
                            id=$temp_unit[$best_index].id
                        [/filter]
                        variable=recall
                        mode=append
                    [/store_unit]
                [/do]
            [/while]
            {VARIABLE_OP i_side add 1}
        [/do]
    [/while]

    {FOREACH recall i_temp}
        [recall]
            id=$recall[$i_temp].id
            x,y=$main_leader.x,$main_leader.y
            fire_event=yes
            show=yes
        [/recall]
    {NEXT i_temp}
    {CLEAR_VARIABLE recall,main_leader,extra_leaders,best_index,temp_unit}
#enddef
